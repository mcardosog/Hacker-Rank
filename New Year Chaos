#!/bin/python3

import math
import os
import random
import re
import sys
import _collections
from _collections import deque
# Complete the minimumBribes function below.

def tooChaotic(elements):
    for i in range(0, len(elements)):
        if q[i] - (i+1) > 2 :
            return 1
    return 0

def minimumBribes(elements):
    if tooChaotic(elements)==1:
        print ("Too chaotic")
        return
    q = deque()
    count = 0
    for i in range(0, len(elements)):
        if len(q) > 0:
            if elements[i] == q[0]:
                q.popleft()
            else:
                if len(q) == 1:
                    if elements[i]-1 -i==2:
                        q.append(elements[i]-1)
                        count+=1
                    count += 1
                else:
                    if(q[1] == elements[i]):
                        q.remove(elements[i])
                        count += 1
                    else : count += 2
        elif i != elements[i]-1 :               
            if (elements[i]-1) -i == 2:         
                count += 1                      
                q.append(elements[i]-2)
                q.append(elements[i]-1)
            else: q.append(elements[i]-1)
            count += 1
    print(count)



if __name__ == '__main__':
    t = int(input())

    for t_itr in range(t):
        n = int(input())

        q = list(map(int, input().rstrip().split()))
        minimumBribes(q)

